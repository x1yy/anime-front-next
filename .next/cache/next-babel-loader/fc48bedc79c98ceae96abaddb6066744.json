{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx\";\nvar __jsx = React.createElement;\nimport { Column, Pagination } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\nimport AnimeCard from './AnimeCard';\n\nvar AnimeCollection = /*#__PURE__*/function (_React$Component) {\n  _inherits(AnimeCollection, _React$Component);\n\n  function AnimeCollection(props) {\n    var _this;\n\n    _classCallCheck(this, AnimeCollection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimeCollection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animeGridRef\", React.createRef());\n\n    _this.state = {\n      items: [{\n        id: 0,\n        title: '',\n        synopis: '',\n        coverLink: '',\n        metaDescription: ''\n      }],\n      meta: {\n        totalItems: 0,\n        itemCount: 0,\n        itemsPerPage: 0,\n        totalPages: 0,\n        currentPage: 0\n      },\n      links: {\n        first: '',\n        previous: '',\n        next: '',\n        last: ''\n      }\n    };\n    _this.getAnimeCollection = _this.getAnimeCollection.bind(_assertThisInitialized(_this));\n    _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n    _this.next = _this.next.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AnimeCollection, [{\n    key: \"getAnimeCollection\",\n    value: function getAnimeCollection(endpoint) {\n      var _this2 = this;\n\n      if (!endpoint) {\n        endpoint = \"https://api.id-anime.net/v1/animes\";\n      }\n\n      console.log(endpoint);\n      window.fetch(endpoint).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          items: data.items,\n          meta: data.meta,\n          links: data.links\n        });\n\n        window.scrollTo(0, _this2.animeGridRef.current.offsetTop);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAnimeCollection('');\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      var previousLink = '';\n\n      if (this.state.links.previous) {\n        var previousPage = _parseInt(this.state.meta.currentPage) - 1;\n        previousLink = \"https://api.id-anime.net/v1/animes?page=\".concat(previousPage, \"&limit=12\");\n        this.getAnimeCollection(previousLink);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var currentPage = _parseInt(this.state.meta.currentPage);\n\n      var totalPages = _parseInt(this.state.meta.totalPages);\n\n      if (currentPage < totalPages) {\n        var nextPage = currentPage + 1;\n        var nextLink = \"https://api.id-anime.net/v1/animes?page=\".concat(nextPage, \"&limit=12\");\n        this.getAnimeCollection(nextLink);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var animeCollection = this.state.items;\n      return __jsx(\"div\", {\n        className: \"body-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __jsx(Column.Group, {\n        vcentered: true,\n        multiline: true,\n        gapSize: 8,\n        className: \"anime-grid\",\n        ref: this.animeGridRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, animeCollection.map(function (collection) {\n        return __jsx(Column, {\n          size: \"one-quarter\",\n          key: collection.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/animes/\".concat(collection.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, __jsx(AnimeCard, {\n          anime: collection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }))));\n      }), __jsx(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(Pagination, {\n        align: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, __jsx(Pagination.Step, {\n        align: \"previous\",\n        onClick: this.previous,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"sebelumnya\"), __jsx(Pagination.Step, {\n        align: \"next\",\n        onClick: this.next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"selanjutnya\")))));\n    }\n  }]);\n\n  return AnimeCollection;\n}(React.Component);\n\nexport default AnimeCollection;","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx"],"names":["Column","Pagination","React","Link","AnimeCard","AnimeCollection","props","createRef","state","items","id","title","synopis","coverLink","metaDescription","meta","totalItems","itemCount","itemsPerPage","totalPages","currentPage","links","first","previous","next","last","getAnimeCollection","bind","endpoint","console","log","window","fetch","then","response","json","data","setState","scrollTo","animeGridRef","current","offsetTop","previousLink","previousPage","nextPage","nextLink","animeCollection","map","collection","Component"],"mappings":"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","sourcesContent":["import { Column, Pagination } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\n\nimport AnimeCard from './AnimeCard';\n\ninterface IItem {\n  id: number;\n  title: string;\n  synopis: string;\n  coverLink: string;\n  metaDescription: string;\n}\n\ninterface IMeta {\n  totalItems: number;\n  itemCount: number;\n  itemsPerPage: number;\n  totalPages: any;\n  currentPage: any;\n}\n\ninterface ILink {\n  first: string;\n  previous: string;\n  next: string;\n  last: string;\n}\n\ninterface IState {\n  items: IItem[];\n  meta: IMeta;\n  links: ILink;\n}\n\nclass AnimeCollection extends React.Component<{}, IState> {\n  state: IState;\n  animeGridRef = React.createRef();\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      items: [{\n        id: 0,\n        title: '',\n        synopis: '',\n        coverLink: '',\n        metaDescription: ''\n      }],\n      meta: {\n        totalItems: 0,\n        itemCount: 0,\n        itemsPerPage: 0,\n        totalPages: 0,\n        currentPage: 0\n      },\n      links: {\n        first: '',\n        previous: '',\n        next: '',\n        last: ''\n      }\n    }\n\n    this.getAnimeCollection = this.getAnimeCollection.bind(this);\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  getAnimeCollection(endpoint: string) {\n    if (!endpoint) {\n      endpoint = `https://api.id-anime.net/v1/animes`;\n    }\n\n    console.log(endpoint);\n\n    window.fetch(endpoint)\n      .then(response => {\n        return response.json();\n      })\n      .then((data: any) => {\n        this.setState({\n          items: data.items,\n          meta: data.meta,\n          links: data.links\n        });\n        window.scrollTo(0, this.animeGridRef.current.offsetTop);\n      })\n  }\n\n  componentDidMount() {\n    this.getAnimeCollection('');\n  }\n\n  previous() {\n    let previousLink = '';\n    if (this.state.links.previous) {\n      const previousPage = parseInt(this.state.meta.currentPage) - 1;\n      previousLink = `https://api.id-anime.net/v1/animes?page=${previousPage}&limit=12`;\n      this.getAnimeCollection(previousLink);\n    }\n  }\n\n  next() {\n    const currentPage = parseInt(this.state.meta.currentPage);\n    const totalPages = parseInt(this.state.meta.totalPages);\n\n    if (currentPage < totalPages) {\n      let nextPage = currentPage + 1;\n      let nextLink = `https://api.id-anime.net/v1/animes?page=${nextPage}&limit=12`;\n      this.getAnimeCollection(nextLink);\n    }\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n\n    return (\n      <div className='body-container'>\n        <Column.Group vcentered multiline gapSize={8} className='anime-grid' ref={this.animeGridRef}>\n          {animeCollection.map(collection => (\n            <Column size='one-quarter' key={collection.id}>\n              <Link href={`/animes/${collection.id}`}>\n                <a><AnimeCard anime={collection} /></a>\n              </Link>\n            </Column>\n          ))}\n\n          <Column>\n              <Pagination align='centered'>\n                <Pagination.Step align='previous' onClick={this.previous}>sebelumnya</Pagination.Step>\n                <Pagination.Step align='next' onClick={this.next}>selanjutnya</Pagination.Step>\n              </Pagination>\n            </Column>\n        </Column.Group>\n      </div>\n    );\n  }\n}\n\nexport default AnimeCollection;\n"]},"metadata":{},"sourceType":"module"}