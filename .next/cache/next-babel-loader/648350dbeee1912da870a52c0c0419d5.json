{"ast":null,"code":"var _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Column, Pagination } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\nimport AnimeCard from './AnimeCard';\n\nclass AnimeCollection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"animeGridRef\", void 0);\n\n    this.state = {\n      items: [{\n        id: 0,\n        title: '',\n        synopis: '',\n        coverLink: '',\n        metaDescription: ''\n      }],\n      meta: {\n        totalItems: 0,\n        itemCount: 0,\n        itemsPerPage: 0,\n        totalPages: 0,\n        currentPage: 0\n      },\n      links: {\n        first: '',\n        previous: '',\n        next: '',\n        last: ''\n      }\n    };\n    this.getAnimeCollection = this.getAnimeCollection.bind(this);\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n    this.animeGridRef = React.createRef();\n  }\n\n  getAnimeCollection(endpoint) {\n    if (!endpoint) {\n      endpoint = `https://api.id-anime.net/v1/animes`;\n    }\n\n    console.log(endpoint);\n    window.fetch(endpoint).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        items: data.items,\n        meta: data.meta,\n        links: data.links\n      });\n      window.scrollTo(0, this.animeGridRef.current.offsetTop);\n    });\n  }\n\n  componentDidMount() {\n    this.getAnimeCollection('');\n  }\n\n  previous() {\n    let previousLink = '';\n\n    if (this.state.links.previous) {\n      const previousPage = parseInt(this.state.meta.currentPage) - 1;\n      previousLink = `https://api.id-anime.net/v1/animes?page=${previousPage}&limit=12`;\n      this.getAnimeCollection(previousLink);\n    }\n  }\n\n  next() {\n    const currentPage = parseInt(this.state.meta.currentPage);\n    const totalPages = parseInt(this.state.meta.totalPages);\n\n    if (currentPage < totalPages) {\n      let nextPage = currentPage + 1;\n      let nextLink = `https://api.id-anime.net/v1/animes?page=${nextPage}&limit=12`;\n      this.getAnimeCollection(nextLink);\n    }\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n    return __jsx(\"div\", {\n      className: \"body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(Column.Group, {\n      vcentered: true,\n      multiline: true,\n      gapSize: 8,\n      className: \"anime-grid\",\n      ref: this.animeGridRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, animeCollection.map(collection => __jsx(Column, {\n      size: \"one-quarter\",\n      key: collection.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: `/animes/${collection.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(AnimeCard, {\n      anime: collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))), __jsx(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(Pagination, {\n      align: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(Pagination.Step, {\n      align: \"previous\",\n      onClick: this.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"sebelumnya\"), __jsx(Pagination.Step, {\n      align: \"next\",\n      onClick: this.next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"selanjutnya\")))));\n  }\n\n}\n\nexport default AnimeCollection;","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx"],"names":["Column","Pagination","React","Link","AnimeCard","AnimeCollection","Component","constructor","props","state","items","id","title","synopis","coverLink","metaDescription","meta","totalItems","itemCount","itemsPerPage","totalPages","currentPage","links","first","previous","next","last","getAnimeCollection","bind","animeGridRef","createRef","endpoint","console","log","window","fetch","then","response","json","data","setState","scrollTo","current","offsetTop","componentDidMount","previousLink","previousPage","parseInt","nextPage","nextLink","render","animeCollection","map","collection"],"mappings":"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","sourcesContent":["import { Column, Pagination } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\n\nimport AnimeCard from './AnimeCard';\n\ninterface IItem {\n  id: number;\n  title: string;\n  synopis: string;\n  coverLink: string;\n  metaDescription: string;\n}\n\ninterface IMeta {\n  totalItems: number;\n  itemCount: number;\n  itemsPerPage: number;\n  totalPages: any;\n  currentPage: any;\n}\n\ninterface ILink {\n  first: string;\n  previous: string;\n  next: string;\n  last: string;\n}\n\ninterface IState {\n  items: IItem[];\n  meta: IMeta;\n  links: ILink;\n}\n\nclass AnimeCollection extends React.Component<{}, IState> {\n  state: IState;\n  animeGridRef: React.RefObject<HTMLElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      items: [{\n        id: 0,\n        title: '',\n        synopis: '',\n        coverLink: '',\n        metaDescription: ''\n      }],\n      meta: {\n        totalItems: 0,\n        itemCount: 0,\n        itemsPerPage: 0,\n        totalPages: 0,\n        currentPage: 0\n      },\n      links: {\n        first: '',\n        previous: '',\n        next: '',\n        last: ''\n      }\n    }\n\n    this.getAnimeCollection = this.getAnimeCollection.bind(this);\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n    this.animeGridRef = React.createRef();\n  }\n\n  getAnimeCollection(endpoint: string) {\n    if (!endpoint) {\n      endpoint = `https://api.id-anime.net/v1/animes`;\n    }\n\n    console.log(endpoint);\n\n    window.fetch(endpoint)\n      .then(response => {\n        return response.json();\n      })\n      .then((data: any) => {\n        this.setState({\n          items: data.items,\n          meta: data.meta,\n          links: data.links\n        });\n        window.scrollTo(0, this.animeGridRef.current.offsetTop);\n      })\n  }\n\n  componentDidMount() {\n    this.getAnimeCollection('');\n  }\n\n  previous() {\n    let previousLink = '';\n    if (this.state.links.previous) {\n      const previousPage = parseInt(this.state.meta.currentPage) - 1;\n      previousLink = `https://api.id-anime.net/v1/animes?page=${previousPage}&limit=12`;\n      this.getAnimeCollection(previousLink);\n    }\n  }\n\n  next() {\n    const currentPage = parseInt(this.state.meta.currentPage);\n    const totalPages = parseInt(this.state.meta.totalPages);\n\n    if (currentPage < totalPages) {\n      let nextPage = currentPage + 1;\n      let nextLink = `https://api.id-anime.net/v1/animes?page=${nextPage}&limit=12`;\n      this.getAnimeCollection(nextLink);\n    }\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n\n    return (\n      <div className='body-container'>\n        <Column.Group vcentered multiline gapSize={8} className='anime-grid' ref={this.animeGridRef}>\n          {animeCollection.map(collection => (\n            <Column size='one-quarter' key={collection.id}>\n              <Link href={`/animes/${collection.id}`}>\n                <a><AnimeCard anime={collection} /></a>\n              </Link>\n            </Column>\n          ))}\n\n          <Column>\n              <Pagination align='centered'>\n                <Pagination.Step align='previous' onClick={this.previous}>sebelumnya</Pagination.Step>\n                <Pagination.Step align='next' onClick={this.next}>selanjutnya</Pagination.Step>\n              </Pagination>\n            </Column>\n        </Column.Group>\n      </div>\n    );\n  }\n}\n\nexport default AnimeCollection;\n"]},"metadata":{},"sourceType":"module"}