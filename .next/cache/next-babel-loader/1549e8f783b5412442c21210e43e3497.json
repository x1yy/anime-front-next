{"ast":null,"code":"var _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Column } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\nimport AnimeCard from './AnimeCard';\n\nclass AnimeCollection extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getAnimeCollection() {\n    const endpoint = `https://api.id-anime.net/v1/animes`;\n    window.fetch(link);\n    then(response => {\n      return response;\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        items: data.items,\n        meta: data.meta,\n        links: data.links\n      });\n    });\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n    return __jsx(Column.Group, {\n      vcentered: true,\n      multiline: true,\n      gapSize: 8,\n      className: \"anime-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, animeCollection.map(collection => __jsx(Column, {\n      size: \"one-quarter\",\n      key: collection.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: `/animes/${collection.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(AnimeCard, {\n      anime: collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default AnimeCollection;","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx"],"names":["Column","React","Link","AnimeCard","AnimeCollection","Component","getAnimeCollection","endpoint","window","fetch","link","then","response","data","console","log","setState","items","meta","links","render","animeCollection","state","map","collection","id"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AA+BA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA0D;AAAA;AAAA;;AAAA;AAAA;;AAGxDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,QAAQ,GAAI,oCAAlB;AACAC,IAAAA,MAAM,CAACC,KAAP,CAAaC,IAAb;AACEC,IAAAA,IAAI,CAACC,QAAQ,IAAI;AACf,aAAOA,QAAP;AACD,KAFG,CAAJ,CAGCD,IAHD,CAGME,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KADA;AAEZC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAFC;AAGZC,QAAAA,KAAK,EAAEN,IAAI,CAACM;AAHA,OAAd;AAKD,KAVD;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,eAAe,GAAG,KAAKC,KAAL,CAAWL,KAAnC;AAEA,WACE,MAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,SAAS,MAAvB;AAAwB,MAAA,SAAS,MAAjC;AAAkC,MAAA,OAAO,EAAE,CAA3C;AAA8C,MAAA,SAAS,EAAC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,eAAe,CAACE,GAAhB,CAAoBC,UAAU,IAC7B,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA2B,MAAA,GAAG,EAAEA,UAAU,CAACC,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,WAAUD,UAAU,CAACC,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAED,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,CADF,CADF,CADD,CADH,CADF;AAWD;;AAjCuD;;AAoC1D,eAAepB,eAAf","sourcesContent":["import { Column } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\n\nimport AnimeCard from './AnimeCard';\n\ninterface IItem {\n  id: number;\n  title: string;\n  synopis: string;\n  coverLink: string;\n  metaDescription: string;\n}\n\ninterface IMeta {\n  totalItems: number;\n  itemCount: number;\n  itemsPerPage: number;\n  totalPages: number;\n  currentPage: number\n}\n\ninterface ILink {\n  first: string;\n  previous: string;\n  next: string;\n  last: string;\n}\n\ninterface IState {\n  items: IItem[];\n  meta: IMeta;\n  links: ILink;\n}\n\nclass AnimeCollection extends React.Component<{}, IState> {\n  state: IState;\n\n  getAnimeCollection() {\n    const endpoint = `https://api.id-anime.net/v1/animes`;\n    window.fetch(link)\n      then(response => {\n        return response;\n      })\n      .then(data => {\n        console.log(data);\n        this.setState({\n          items: data.items,\n          meta: data.meta,\n          links: data.links\n        });\n      })\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n\n    return (\n      <Column.Group vcentered multiline gapSize={8} className='anime-grid'>\n        {animeCollection.map(collection => (\n          <Column size='one-quarter' key={collection.id}>\n            <Link href={`/animes/${collection.id}`}>\n              <a><AnimeCard anime={collection} /></a>\n            </Link>\n          </Column>\n        ))}\n      </Column.Group>\n    );\n  }\n}\n\nexport default AnimeCollection;\n"]},"metadata":{},"sourceType":"module"}