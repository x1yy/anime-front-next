{"ast":null,"code":"var _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Column } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\nimport AnimeCard from './AnimeCard';\n\nclass AnimeCollection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    this.state = {\n      items: [{\n        id: 0,\n        title: '',\n        synopis: '',\n        coverLink: '',\n        metaDescription: ''\n      }],\n      meta: {\n        totalItems: 0,\n        itemCount: 0,\n        itemsPerPage: 0,\n        totalPages: 0,\n        currentPage: 0\n      },\n      links: {\n        first: '',\n        previous: '',\n        next: '',\n        last: ''\n      }\n    };\n  }\n\n  getAnimeCollection() {\n    const endpoint = `https://api.id-anime.net/v1/animes`;\n    window.fetch(endpoint).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        items: data.items,\n        meta: data.meta,\n        links: data.links\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getAnimeCollection();\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n    return __jsx(Column.Group, {\n      vcentered: true,\n      multiline: true,\n      gapSize: 8,\n      className: \"anime-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, animeCollection.map(collection => __jsx(Column, {\n      size: \"one-quarter\",\n      key: collection.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: `/animes/${collection.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(AnimeCard, {\n      anime: collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default AnimeCollection;","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeCollection.tsx"],"names":["Column","React","Link","AnimeCard","AnimeCollection","Component","constructor","props","state","items","id","title","synopis","coverLink","metaDescription","meta","totalItems","itemCount","itemsPerPage","totalPages","currentPage","links","first","previous","next","last","getAnimeCollection","endpoint","window","fetch","then","response","json","data","setState","componentDidMount","render","animeCollection","map","collection"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AA+BA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA0D;AAGxDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB;;AAEtB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,EAAE,EAAE,CADE;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,OAAO,EAAE,EAHH;AAINC,QAAAA,SAAS,EAAE,EAJL;AAKNC,QAAAA,eAAe,EAAE;AALX,OAAD,CADI;AAQXC,MAAAA,IAAI,EAAE;AACJC,QAAAA,UAAU,EAAE,CADR;AAEJC,QAAAA,SAAS,EAAE,CAFP;AAGJC,QAAAA,YAAY,EAAE,CAHV;AAIJC,QAAAA,UAAU,EAAE,CAJR;AAKJC,QAAAA,WAAW,EAAE;AALT,OARK;AAeXC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,IAAI,EAAE;AAJD;AAfI,KAAb;AAsBD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,QAAQ,GAAI,oCAAlB;AACAC,IAAAA,MAAM,CAACC,KAAP,CAAaF,QAAb,EACGG,IADH,CACQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAe;AACnB,WAAKC,QAAL,CAAc;AACZzB,QAAAA,KAAK,EAAEwB,IAAI,CAACxB,KADA;AAEZM,QAAAA,IAAI,EAAEkB,IAAI,CAAClB,IAFC;AAGZM,QAAAA,KAAK,EAAEY,IAAI,CAACZ;AAHA,OAAd;AAKD,KAVH;AAWD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,kBAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAMC,eAAe,GAAG,KAAK7B,KAAL,CAAWC,KAAnC;AAEA,WACE,MAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,SAAS,MAAvB;AAAwB,MAAA,SAAS,MAAjC;AAAkC,MAAA,OAAO,EAAE,CAA3C;AAA8C,MAAA,SAAS,EAAC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG4B,eAAe,CAACC,GAAhB,CAAoBC,UAAU,IAC7B,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA2B,MAAA,GAAG,EAAEA,UAAU,CAAC7B,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,WAAU6B,UAAU,CAAC7B,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,SAAD;AAAW,MAAA,KAAK,EAAE6B,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,CADF,CADF,CADD,CADH,CADF;AAWD;;AA9DuD;;AAiE1D,eAAenC,eAAf","sourcesContent":["import { Column } from 'rbxhotfix';\nimport React from 'react';\nimport Link from 'next/link';\n\nimport AnimeCard from './AnimeCard';\n\ninterface IItem {\n  id: number;\n  title: string;\n  synopis: string;\n  coverLink: string;\n  metaDescription: string;\n}\n\ninterface IMeta {\n  totalItems: number;\n  itemCount: number;\n  itemsPerPage: number;\n  totalPages: number;\n  currentPage: number\n}\n\ninterface ILink {\n  first: string;\n  previous: string;\n  next: string;\n  last: string;\n}\n\ninterface IState {\n  items: IItem[];\n  meta: IMeta;\n  links: ILink;\n}\n\nclass AnimeCollection extends React.Component<{}, IState> {\n  state: IState;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      items: [{\n        id: 0,\n        title: '',\n        synopis: '',\n        coverLink: '',\n        metaDescription: ''\n      }],\n      meta: {\n        totalItems: 0,\n        itemCount: 0,\n        itemsPerPage: 0,\n        totalPages: 0,\n        currentPage: 0\n      },\n      links: {\n        first: '',\n        previous: '',\n        next: '',\n        last: ''\n      }\n    }\n  }\n\n  getAnimeCollection() {\n    const endpoint = `https://api.id-anime.net/v1/animes`;\n    window.fetch(endpoint)\n      .then(response => {\n        return response.json();\n      })\n      .then((data: any) => {\n        this.setState({\n          items: data.items,\n          meta: data.meta,\n          links: data.links\n        });\n      })\n  }\n\n  componentDidMount() {\n    this.getAnimeCollection();\n  }\n\n  render() {\n    const animeCollection = this.state.items;\n\n    return (\n      <Column.Group vcentered multiline gapSize={8} className='anime-grid'>\n        {animeCollection.map(collection => (\n          <Column size='one-quarter' key={collection.id}>\n            <Link href={`/animes/${collection.id}`}>\n              <a><AnimeCard anime={collection} /></a>\n            </Link>\n          </Column>\n        ))}\n      </Column.Group>\n    );\n  }\n}\n\nexport default AnimeCollection;\n"]},"metadata":{},"sourceType":"module"}