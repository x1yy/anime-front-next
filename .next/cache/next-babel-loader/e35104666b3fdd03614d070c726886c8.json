{"ast":null,"code":"var _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeStreaming.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Column, List, Title, Pagination } from 'rbxhotfix';\nexport class AnimeStreaming extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anime: {\n        id: this.props.animeId,\n        title: 'anime title',\n        synopis: 'anime synopsis',\n        metaDescription: 'anime metaDescription',\n        coverLink: 'anime coverLink'\n      }\n    };\n    console.log(this.props);\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    console.log(this.state.anime.id);\n    const animeLink = `https://api.id-anime.net/v1/animes/${this.state.anime.id}`;\n    window.fetch(animeLink).then(response => {\n      response.json().then(data => {\n        this.setState({\n          anime: {\n            id: data.id,\n            title: data.title,\n            synopsis: data.synopsis,\n            metaDescription: data.metaDescription,\n            coverLink: data.coverLink\n          }\n        });\n      });\n    });\n  }\n\n  renderStreamingIframe(episodeIndex) {\n    const animeEpisodes = [{\n      episode: 0,\n      title: 'episode',\n      link: ''\n    }];\n    return __jsx(\"iframe\", {\n      className: \"video-iframe\",\n      title: \"anime-streaming\",\n      frameBorder: 0,\n      src: animeEpisodes[episodeIndex].link,\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const anime = this.state.anime;\n    const animeEpisodes = [{\n      id: 1,\n      episode: 0,\n      title: 'episode'\n    }];\n    const previousLink = '';\n    const nextLink = '';\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(Column, {\n      size: \"three-fifths\",\n      offset: \"one-fifth\",\n      height: \"380px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Title, {\n      size: 3,\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, anime.title), __jsx(Title, {\n      size: 4,\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Episode \", animeEpisodes[0].episode, \": \", animeEpisodes[0].title), this.renderStreamingIframe(0), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), __jsx(Title, {\n      size: 5,\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Episode\"), __jsx(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, animeEpisodes.map(episode => __jsx(Link, {\n      href: `/animes/${this.props.animeId}/episodes/${episode.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Episode \", episode.episode)))), __jsx(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Pagination, {\n      align: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Pagination.Step, {\n      align: \"previous\",\n      href: previousLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"sebelumnya\"), __jsx(Pagination.Step, {\n      align: \"next\",\n      href: nextLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"selanjutnya\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/components/AnimeStreaming.tsx"],"names":["React","Link","Column","List","Title","Pagination","AnimeStreaming","Component","constructor","props","state","anime","id","animeId","title","synopis","metaDescription","coverLink","console","log","componentDidMount","animeLink","window","fetch","then","response","json","data","setState","synopsis","renderStreamingIframe","episodeIndex","animeEpisodes","episode","link","render","previousLink","nextLink","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport {\n  Column, List, Title, PageLoader, Pagination\n} from 'rbxhotfix';\n\ninterface IAnime {\n  anime: any;\n}\n\ninterface IItem {\n  id: number;\n  title: string;\n  synopsis: string;\n  metaDescription: string;\n  coverLink: string;\n}\n\nexport class AnimeStreaming extends React.Component<any, IAnime> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      anime: {\n        id: this.props.animeId,\n        title: 'anime title',\n        synopis: 'anime synopsis',\n        metaDescription: 'anime metaDescription',\n        coverLink: 'anime coverLink',\n      }\n    }\n\n    console.log(this.props);\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    console.log(this.state.anime.id);\n    const animeLink = `https://api.id-anime.net/v1/animes/${this.state.anime.id}`;\n    window.fetch(animeLink)\n      .then((response: any) => {\n        response.json().then((data: any) => {\n          this.setState({\n            anime: {\n              id: data.id,\n              title: data.title,\n              synopsis: data.synopsis,\n              metaDescription: data.metaDescription,\n              coverLink: data.coverLink\n            }\n          });\n        });\n      });\n  }\n\n  renderStreamingIframe(episodeIndex: number) {\n    const animeEpisodes = [{\n      episode: 0,\n      title: 'episode',\n      link: '',\n    }];\n    return (\n      <iframe className='video-iframe' title='anime-streaming' frameBorder={0} src={animeEpisodes[episodeIndex].link} allowFullScreen />\n    )\n  }\n\n  render() {\n    const anime = this.state.anime;\n    const animeEpisodes = [{\n      id: 1,\n      episode: 0,\n      title: 'episode',\n    }]\n\n    const previousLink = '';\n    const nextLink = '';\n\n    return (\n      <div>\n        <Column size='three-fifths' offset='one-fifth' height='380px'>\n          <Title size={3} as='h1'>{anime.title}</Title>\n          <Title size={4} as='h2'>Episode {animeEpisodes[0].episode}: {animeEpisodes[0].title}</Title>\n          {this.renderStreamingIframe(0)}\n          <br />\n          <Title size={5} as='h3'>Episode</Title>\n          <List>\n            {animeEpisodes.map(episode => (\n              <Link href={`/animes/${this.props.animeId}/episodes/${episode.id}`}>\n                <a>\n                  <List.Item>Episode {episode.episode}</List.Item>\n                </a>\n              </Link>\n            ))}\n\n            <List.Item>\n              <Pagination align='centered'>\n                <Pagination.Step align='previous' href={previousLink}>sebelumnya</Pagination.Step>\n                <Pagination.Step align='next' href={nextLink}>selanjutnya</Pagination.Step>\n              </Pagination>\n            </List.Item>\n          </List>\n        </Column>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}