{"ast":null,"code":"var _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/pages/animes/[animeId]/episodes/[episodeId].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Column, List, Title, Pagination } from 'rbxhotfix';\nimport Layout from '../../../components/AnimeLayout';\nimport 'rbxhotfix/index.css';\nimport '../index.css';\n\nconst animeStreaming = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(Column, {\n  size: \"three-fifths\",\n  offset: \"one-fifth\",\n  height: \"380px\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(Title, {\n  size: 3,\n  as: \"h1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.anime.title), __jsx(Title, {\n  size: 4,\n  as: \"h2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Episode \", props.episodes.items[0].title), __jsx(\"iframe\", {\n  className: \"video-iframe\",\n  title: props.episodes.items[0].title,\n  frameBorder: 0,\n  src: props.episodes.items[0].link,\n  allowFullScreen: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), __jsx(Title, {\n  size: 5,\n  as: \"h3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Episode\"), __jsx(List, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.episodes.items.map(episode => __jsx(Link, {\n  href: `/animes/${props.anime.id}/episodes/${episode.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, __jsx(List.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Episode \", episode.episode))), __jsx(List.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(Pagination, {\n  align: \"centered\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(Pagination.Step, {\n  align: \"previous\",\n  href: props.previousLink,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"sebelumnya\"), __jsx(Pagination.Step, {\n  align: \"next\",\n  href: props.nextLink,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"selanjutnya\"))))));\n\nanimeStreaming.getInitialProps = async function (ctx) {\n  console.log(ctx.query);\n  const {\n    episodeId\n  } = ctx.query;\n  const res = await fetch(`https://api.id-anime.net/v1/episodes/${episodeId}`);\n  const anime = await res.json();\n  let episodesLink = `https://api.id-anime.net/v1/animes/${animeId}/episodes`;\n\n  if (ctx.query.page) {\n    episodesLink = `https://api.id-anime.net/v1/animes/${animeId}/episodes?page=${ctx.query.page}&limit=12`;\n  }\n\n  const res2 = await fetch(episodesLink);\n  const episodes = await res2.json();\n  console.log(anime);\n  console.log(episodes);\n  let previousLink = '';\n\n  if (episodes.links.previous) {\n    // @ts-ignore\n    const previousPage = parseInt(episodes.meta.currentPage) - 1;\n    previousLink = `/animes/${anime.id}?page=${previousPage}`;\n  } // @ts-ignore\n\n\n  let nextPage = parseInt(episodes.meta.currentPage) + 1;\n  let nextLink = `/animes/${anime.id}?page=${nextPage}`;\n  return {\n    anime,\n    episodes,\n    previousLink,\n    nextLink\n  };\n};\n\nexport default animeStreaming;","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/pages/animes/[animeId]/episodes/[episodeId].tsx"],"names":["Link","fetch","Column","List","Title","Pagination","Layout","animeStreaming","props","anime","title","episodes","items","link","map","episode","id","previousLink","nextLink","getInitialProps","ctx","console","log","query","episodeId","res","json","episodesLink","animeId","page","res2","links","previous","previousPage","parseInt","meta","currentPage","nextPage"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Column, List, Title, PageLoader, Pagination } from 'rbxhotfix';\nimport Layout from '../../../components/AnimeLayout';\nimport AnimeStreaming from '../../components/AnimeStreaming';\n\nimport 'rbxhotfix/index.css';\nimport '../index.css';\n\nconst animeStreaming = props => (\n    <Layout>\n      <Column size='three-fifths' offset='one-fifth' height='380px'>\n        <Title size={3} as='h1'>{props.anime.title}</Title>\n        <Title size={4} as='h2'>Episode {props.episodes.items[0].title}</Title>\n        <iframe className='video-iframe' title={props.episodes.items[0].title} frameBorder={0} src={props.episodes.items[0].link} allowFullScreen />\n        <br />\n        <Title size={5} as='h3'>Episode</Title>\n        <List>\n          {props.episodes.items.map(episode => (\n            <Link href={`/animes/${props.anime.id}/episodes/${episode.id}`}>\n              <List.Item>Episode {episode.episode}</List.Item>\n            </Link>\n          ))}\n          <List.Item>\n            <Pagination align='centered'>\n              <Pagination.Step align='previous' href={props.previousLink}>sebelumnya</Pagination.Step>\n              <Pagination.Step align='next' href={props.nextLink}>selanjutnya</Pagination.Step>\n            </Pagination>\n          </List.Item>\n        </List>\n      </Column>\n    </Layout>\n)\n\nanimeStreaming.getInitialProps = async function(ctx) {\n  console.log(ctx.query);\n  const {episodeId} = ctx.query;\n  const res = await fetch(`https://api.id-anime.net/v1/episodes/${episodeId}`);\n  const anime = await res.json();\n\n  let episodesLink = `https://api.id-anime.net/v1/animes/${animeId}/episodes`;\n  if (ctx.query.page) {\n    episodesLink = `https://api.id-anime.net/v1/animes/${animeId}/episodes?page=${ctx.query.page}&limit=12`;\n  }\n\n  const res2 = await fetch(episodesLink);\n  const episodes = await res2.json()\n\n  console.log(anime);\n  console.log(episodes);\n  let previousLink = '';\n  if (episodes.links.previous) {\n    // @ts-ignore\n    const previousPage = parseInt(episodes.meta.currentPage) - 1;\n    previousLink = `/animes/${anime.id}?page=${previousPage}`;\n  }\n\n  // @ts-ignore\n  let nextPage = parseInt(episodes.meta.currentPage) + 1;\n  let nextLink = `/animes/${anime.id}?page=${nextPage}`;\n  return { anime, episodes, previousLink, nextLink };\n}\n\nexport default animeStreaming;\n"]},"metadata":{},"sourceType":"module"}