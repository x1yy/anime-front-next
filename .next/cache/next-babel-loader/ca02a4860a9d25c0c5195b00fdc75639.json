{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/pages/animes/[animeId].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/AnimeLayout';\nimport 'rbxhotfix/index.css';\nimport '../index.css';\n\nvar animeStreaming = function animeStreaming(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.anime.title));\n};\n\nanimeStreaming.getInitialProps = function _callee(ctx) {\n  var animeId, res, anime;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          animeId = ctx.query.animeId;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.id-anime.net/v1/animes/\".concat(animeId)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          anime = _context.sent;\n          console.log(anime);\n          return _context.abrupt(\"return\", {\n            anime: anime\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default animeStreaming;","map":{"version":3,"sources":["/home/dwi/KERJA/KERJA/id-anime/id-anime-rbx-next/pages/animes/[animeId].tsx"],"names":["fetch","Layout","animeStreaming","props","anime","title","getInitialProps","ctx","animeId","query","res","json","console","log"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAGA,OAAO,qBAAP;AACA,OAAO,cAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SACxB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACC,KAAN,CAAYC,KAAlB,CADF,CADwB;AAAA,CAA5B;;AAMAH,cAAc,CAACI,eAAf,GAAiC,iBAAeC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,UAAAA,OADwB,GACbD,GAAG,CAACE,KADS,CACxBD,OADwB;AAAA;AAAA,2CAEbR,KAAK,8CAAuCQ,OAAvC,EAFQ;;AAAA;AAEzBE,UAAAA,GAFyB;AAAA;AAAA,2CAGXA,GAAG,CAACC,IAAJ,EAHW;;AAAA;AAGzBP,UAAAA,KAHyB;AAK/BQ,UAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAL+B,2CAMxB;AAAEA,YAAAA,KAAK,EAALA;AAAF,WANwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;;AASA,eAAeF,cAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/AnimeLayout';\nimport AnimeStreaming from '../../components/AnimeStreaming';\n\nimport 'rbxhotfix/index.css';\nimport '../index.css';\n\nconst animeStreaming = props => (\n    <Layout>\n      <div>{props.anime.title}</div>\n    </Layout>\n)\n\nanimeStreaming.getInitialProps = async function(ctx) {\n  const {animeId} = ctx.query;\n  const res = await fetch(`https://api.id-anime.net/v1/animes/${animeId}`);\n  const anime = await res.json();\n\n  console.log(anime);\n  return { anime };\n}\n\nexport default animeStreaming;\n"]},"metadata":{},"sourceType":"module"}